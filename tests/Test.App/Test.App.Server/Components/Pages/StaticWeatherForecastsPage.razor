@attribute [Route(Route)]
@attribute [StreamRendering]
@inherits BaseComponent

@code {
    public const string Title = "Weather";
    public const string Route = "/StaticWeatherForecastsPage";
    private WeatherForecast[]? forecasts;

    protected override async Task OnInitializedAsync()
    {
        // Simulate asynchronous loading to demonstrate streaming rendering
        await Task.Delay(500);

        var startDate = DateOnly.FromDateTime(DateTime.Now);
        string[] summaries = new[] { "Freezing", "Bracing", "Chilly", "Cool", "Mild", "Warm", "Balmy", "Hot", "Sweltering", "Scorching" };
        forecasts = Enumerable.Range(1, 5).Select(index => new WeatherForecast
        {
            Date = startDate.AddDays(index),
            TemperatureC = Random.Shared.Next(-20, 55),
            Summary = summaries[Random.Shared.Next(summaries.Length)]
        }).ToArray();
    }

    private class WeatherForecast
    {
        public DateOnly Date { get; init; }
        public int TemperatureC { get; init; }
        public string? Summary { get; init; }
        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
    }
}

<TwPageTitle>@Title</TwPageTitle>

<h1>@Title</h1>
@RenderModeDisplay
<hr/>
<!-- Arrange -->
<!-- Test description -->
<p>Test StreamRendering data. </p>

<br/>
<!-- Values to validate -->
@if (forecasts == null)
{
  <p><em>Loading...</em></p>
}
else
{
  <table class="table" data-qa="weather-table">
    <thead>
      <tr>
        <th>Date</th>
        <th>Temp. (C)</th>
        <th>Temp. (F)</th>
        <th>Summary</th>
      </tr>
    </thead>
    <tbody>
      @foreach (WeatherForecast forecast in forecasts)
      {
        <tr>
          <td>@forecast.Date.ToShortDateString()</td>
          <td>@forecast.TemperatureC</td>
          <td>@forecast.TemperatureF</td>
          <td>@forecast.Summary</td>
        </tr>
      }
    </tbody>
  </table>
}

<hr>
<!-- ACT -->
<p><strong>Act:</strong>Load this page</p>

<!-- ASSERT -->
<p>
  <strong>Assert:</strong>
  Current Render Mode == Static<br/>
  Configured Render Mode: None<br/>
  The page should render the weather forecast data in a table.
</p>
