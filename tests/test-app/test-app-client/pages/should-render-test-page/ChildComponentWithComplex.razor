@namespace Test.App.Client.Pages.ShouldRenderTestPage
@inherits BaseComponent

@code
{
  [Parameter] public ShouldRenderTestPage.ComplexType? SomeComplex { get; set; }
}

<div class=@Id>
  <h6>Child with Complex Property</h6>
  <div>Value: @SomeComplex?.Property</div>

  <div class="child-render-info-container">
    <div>Render Count: @(RenderCount + 1)</div>
    <div>ShouldRenderWasCalledBy: @ShouldRenderWasCalledBy</div>
    <div>Render Reason: @RenderReason</div>
    <div>SetParametersAsyncWasCalledBy: @SetParametersAsyncWasCalledBy</div>
    <div>Render Reason Detail: @RenderReasonDetail</div>
    <div>StateHasChangedWasCalledBy: @StateHasChangedWasCalledBy</div>
  </div>

  <div>
    <strong>Assert:</strong><br />
    Render Count: should initially be 1. (Parent renders twice)<br />
    Render Count: should increment by 1 on each click of the `Trigger Complex Parameter Change` button. <br />
    Render Reason: should be `ParameterChanged` always.<br />
    Render Reason Detail: should initially be `Parameter 'SomeComplex' changed: Null value change`<br />
    Render Reason Detail: should be `Parameter 'SomeComplex' changed` on all other Renders.
  </div>
</div>

<style>
  @($@"
    .{Id} {{
      border: 1px solid;
      padding: 1rem;            
    }}

    .{Id} > .child-render-info-container {{
      display: grid;
      grid-template-columns: 1fr 2fr;
      gap: 0px;
    }}

    .{Id} > .child-render-info-container > div {{
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
    }}
  ")
</style>
