@namespace Test.App.Client.Pages
@rendermode InteractiveAuto
@attribute [Route(Route)]
@using Test.App.Client.Features.Counter
@inherits BaseComponent

@code
{

  /// <summary>
  /// The title for the page.
  /// </summary>
  public const string Title = "Exception Page";

  /// <summary>
  /// The route for the page.
  /// </summary>
  public const string Route = "/ThrowExceptionPage";

  private async Task SendThrowExceptionAction() =>
    await Mediator.Send
    (
      new CounterState.ThrowExceptionActionSet.Action
      (
        message: "This is a client side exception"
      )
    );

  private async Task SendThrowServerSideExceptionAction() =>
    await Mediator.Send
    (
      new CounterState.ThrowServerSideExceptionActionSet.Action
      (
        message: "This is a server side exception"
      )
    );
}

<TwPageTitle>@Title</TwPageTitle>
<h1>@Title</h1>
@RenderModeDisplay
<hr>
<!-- Arrange -->
<!-- Test description -->
<p>
  Verify that exceptions thrown in the UI are caught by the clone middleware and do not crash the UX.
</p>

<!-- Values to validate -->
<ul>
  <li data-qa="CounterState.Guid">
    <strong>CounterState.Guid:</strong> <span data-qa='counter-state-guid'>@CounterState.Guid</span>
  </li>
</ul>

<!-- Actions to take -->
<h6>Click below to Throw Client Side Exception.</h6>
<button data-qa="throw-client-side-exception" @onclick=SendThrowExceptionAction>Throw Client Side Exception</button>

<h6>Click below to Throw Server Side Exception.</h6>
<button data-qa="throw-server-side-exception" @onclick=SendThrowServerSideExceptionAction>Throw Server Side Exception</button>


<hr>
<!-- ACT: -->
<p><strong>Act:</strong> Click `Throw Client Side Exception` Button</p>

<!-- ASSERT: -->
<p>
  <strong>Assert:</strong> CounterState.Guid should NOT change. And the UX should not crash.
</p>

<hr>
<!-- ACT: -->
<p><strong>Act:</strong> Click `Throw Server Side Exception` Button</p>

<!-- ASSERT: -->
<p>
  <strong>Assert:</strong> CounterState.Guid should NOT change. And the UX should not crash.
</p>

<hr>
<p>
  <strong>Repeat</strong> the above steps where `Current Render Mode` is Server and Wasm.
</p>

<div><strong>Note:</strong>
If RenderMode is Server you will see stack trace on Server console<br>
If RenderMode is Wasm you will see stack trace "warning" on Browser console<br>
The clone middleware will catch these exceptions and reset the state
thus the CounterState.Guid should NOT change
</div>

