<Project>
  <!-- Set common properties regarding assembly information and nuget packages -->
  <PropertyGroup>
    <TimeWarpStateVersion>11.0.0-beta.82+8.0.303</TimeWarpStateVersion>
    <Authors>Steven T. Cramer</Authors>
    <Product>TimeWarp State</Product>
    <PackageVersion>$(TimeWarpStateVersion)</PackageVersion>
    <PackageProjectUrl>https://timewarpengineering.github.io/timewarp-state/</PackageProjectUrl>
    <PackageTags>TimeWarp.State; TimeWarp-State; TimeWarpState; BlazorState; Blazor; State; Blazor-State; MediatR; Mediator; Pipeline; Redux; Flux</PackageTags>
    <PackageIcon>Logo.png</PackageIcon>
    <RepositoryUrl>https://github.com/TimeWarpEngineering/timewarp-state.git</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <PackageLicenseExpression>Unlicense</PackageLicenseExpression>
    <PackageReleaseNotes>https://timewarpengineering.github.io/timewarp-state/Overview.html</PackageReleaseNotes>
    <PackageReadmeFile>README.md</PackageReadmeFile>
    <ContentTargetFolders>contentFiles</ContentTargetFolders>
  </PropertyGroup>
  
  <!-- Deterministic Builds  https://devblogs.microsoft.com/dotnet/producing-packages-with-source-link/#deterministic-builds -->
  <PropertyGroup Condition="'$(TF_BUILD)' == 'true'">
    <ContinuousIntegrationBuild>true</ContinuousIntegrationBuild>
  </PropertyGroup>
  <PropertyGroup Condition="'$(GITHUB_ACTIONS)' == 'true'">
    <ContinuousIntegrationBuild>true</ContinuousIntegrationBuild>
  </PropertyGroup>

  <!-- Common compile parameters -->
  <PropertyGroup>
    <AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>
    <ImplicitUsings>enable</ImplicitUsings>
    <LangVersion>latest</LangVersion>
    <ManagePackageVersionsCentrally>true</ManagePackageVersionsCentrally>
    <NoWarn>CS7035;NU1503;1503</NoWarn>
    <Nullable>disable</Nullable>
    <TargetFramework>net8.0</TargetFramework>
    <TreatWarningsAsErrors>false</TreatWarningsAsErrors>
  </PropertyGroup>

  <!--This is to add the CommitDate and CommitHash to your assemblyinfo -->

  <Target Name="SetAssemblyMetaData" BeforeTargets="PreBuildEvent" Condition="'$(NCrunch)' != '1'">
    <Exec Command="git log -1 --format=%%ct" ConsoleToMSBuild="true" Condition="'$(OS)' == 'Windows_NT'">
      <Output TaskParameter="ConsoleOutput" PropertyName="GitCommitTimestamp"/>
    </Exec>
    <Exec Command="git log -1 --format=%ct" ConsoleToMSBuild="true" Condition="'$(OS)' != 'Windows_NT'">
      <Output TaskParameter="ConsoleOutput" PropertyName="GitCommitTimestamp"/>
    </Exec>
    <Exec Command="pwsh -ExecutionPolicy Bypass -NoProfile -File &quot;$(MSBuildThisFileDirectory)ConvertTimestamp.ps1&quot; -GitCommitTimestamp $(GitCommitTimestamp)" ConsoleToMSBuild="true">
      <Output TaskParameter="ConsoleOutput" PropertyName="CommitDate"/>
    </Exec>
    <PropertyGroup>
      <!-- In Visual Studio the below line crashes if they fix VS then we can use this and no need for the powershell script -->
      <!--<LastCommitDate>$([System.DateTime]::UnixEpoch.AddSeconds($(GitCommitTimestamp)).ToUniversalTime().ToString("yyyy-MM-ddTHH:mm:ssK"))</LastCommitDate>-->
    </PropertyGroup>
    <ItemGroup>
      <AssemblyAttribute Include="System.Reflection.AssemblyMetadataAttribute">
        <_Parameter1>CommitDate</_Parameter1>
        <_Parameter2>$(LastCommitDate)</_Parameter2>
      </AssemblyAttribute>
    </ItemGroup>
    <!--    <Message Importance="high" Text="OS: $(OS)" />-->
    <!--    <Message Importance="high" Text="CommitDate: $(LastCommitDate)" />-->
  </Target>
</Project>
