@namespace Sample02Wasm.Pages
@page "/demo"
@using Sample02Wasm.Features.Demo
@using TimeWarp.Features.ActionTracking
@inherits TimeWarpStateComponent

<PageTitle>Action Tracking Demo</PageTitle>

<h1>Action Tracking Demo</h1>

<div class="mb-3">
    <h3>Action Status</h3>
    <p><strong>Any Active Actions:</strong> @ActionTrackingState.IsActive</p>
    <p><strong>Two Second Action Running:</strong> @IsTwoSecondActionRunning</p>
    <p><strong>Five Second Action Running:</strong> @IsFiveSecondActionRunning</p>
</div>

<div class="mb-3">
    <button class="btn btn-primary me-2" @onclick="StartTwoSecondAction">
        Start 2-Second Action
    </button>
    <button class="btn btn-primary" @onclick="StartFiveSecondAction">
        Start 5-Second Action
    </button>
</div>

<div class="mb-3">
    <h3>Active Actions</h3>
    @if (ActionTrackingState.IsActive)
    {
        foreach (var action in ActionTrackingState.ActiveActions)
        {
            <div class="alert alert-info">
                Running: @(action.GetType().FullName?.Split("+")[1].Replace("ActionSet.Action", "").Replace("ActionSet", ""))
            </div>
        }
    }
    else
    {
        <p>No active actions</p>
    }
</div>

@code {
    DemoState DemoState => GetState<DemoState>();
    ActionTrackingState ActionTrackingState => GetState<ActionTrackingState>();

    bool IsTwoSecondActionRunning => ActionTrackingState.IsAnyActive
    (
        [typeof(DemoState.TwoSecondActionSet.Action)]
    );

    bool IsFiveSecondActionRunning => ActionTrackingState.IsAnyActive
    (
        [typeof(DemoState.FiveSecondActionSet.Action)]
    );

    private async Task StartTwoSecondAction() =>
        await DemoState.TwoSecond();

    private async Task StartFiveSecondAction() =>
        await DemoState.FiveSecond();
}
